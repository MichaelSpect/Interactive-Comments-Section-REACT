{"version":3,"sources":["Components/Atribution.js","Components/Likes.js","Components/SingleComment.js","Components/NewMsg.js","Components/DeleteComment.js","Components/CommentsList.js","App.js","index.js"],"names":["Atribution","className","href","Likes","score","setAllComments","allComments","id","changeScoreStateHandler","newScore","prevComents","map","comment","newCalculatedScore","filteredReplies","replies","onClick","width","height","xmlns","d","fill","SingleComment","activeUser","onclickReplyHandler","singleCommentClass","index","indexParent","indexReply","displayModal","pathReply","useState","isEdit","setIsEdit","contentEditRef","useRef","currentUser","username","src","user","image","png","alt","createdAt","commentId","e","target","click","current","contentEditable","suppressContentEditableWarning","ref","replyingTo","content","updatedContent","innerText","NewMsg","props","contentInputRef","userToReply","newMsgContent","setNewMsgContent","onKeyPress","enteredComment","textContent","newCommentObj","Math","floor","random","webp","btnType","newReplyObj","filter","comm","parentCommentID","parentIndex","setIsReply","DeleteComment","deleteMsg","CommentsList","showModal","setShowModal","Data","comments","isReply","commentID","setCommentID","clickReplyHandler","displayModalHandler","newArr","length","reply","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cee925ae.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Styles/Atribution.css\";\r\n\r\nconst Atribution = () => {\r\n  return (\r\n    <footer className=\"attribution\">\r\n      <div>\r\n        Challenge by\r\n        <a href=\"https://www.frontendmentor.io?ref=challenge\">\r\n          {\" \"}\r\n          Frontend Mentor\r\n        </a>\r\n        .\r\n      </div>\r\n      <div>\r\n        Coded by <a href=\"https://github.com/MichaelSpect\">Michael Spect</a>.\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Atribution;\r\n","// import { useState } from \"react\";\r\nimport \"./Styles/Likes.css\";\r\n\r\nconst Likes = ({ score, allComments, setAllComments, id }) => {\r\n  // const [commScore, setCommScore] = useState(score);\r\n\r\n  const changeScoreStateHandler = function (newScore) {\r\n    // setCommScore((prevScore) => newScore);\r\n    setAllComments((prevComents) => {\r\n      const newCommentsArr = prevComents.map(function (comment) {\r\n        const newCalculatedScore = newScore;\r\n        // Setting new score if it's first-line (parent) comment\r\n        if (comment.id === id) return { ...comment, score: newCalculatedScore };\r\n        // Setting new score if it's reply (children) comment\r\n        const filteredReplies = comment.replies.map((comment) =>\r\n          comment.id === id\r\n            ? { ...comment, score: newCalculatedScore }\r\n            : comment\r\n        );\r\n        return { ...comment, replies: filteredReplies };\r\n      });\r\n      return newCommentsArr;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"likes-container\">\r\n      <div\r\n        className=\"score-plus\"\r\n        onClick={() => changeScoreStateHandler(score + 1)}\r\n      >\r\n        <svg width=\"11\" height=\"11\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <path\r\n            d=\"M6.33 10.896c.137 0 .255-.05.354-.149.1-.1.149-.217.149-.354V7.004h3.315c.136 0 .254-.05.354-.149.099-.1.148-.217.148-.354V5.272a.483.483 0 0 0-.148-.354.483.483 0 0 0-.354-.149H6.833V1.4a.483.483 0 0 0-.149-.354.483.483 0 0 0-.354-.149H4.915a.483.483 0 0 0-.354.149c-.1.1-.149.217-.149.354v3.37H1.08a.483.483 0 0 0-.354.15c-.1.099-.149.217-.149.353v1.23c0 .136.05.254.149.353.1.1.217.149.354.149h3.333v3.39c0 .136.05.254.15.353.098.1.216.149.353.149H6.33Z\"\r\n            fill=\"#C5C6EF\"\r\n          />\r\n        </svg>\r\n      </div>\r\n\r\n      <div className=\"score-value\">{score}</div>\r\n      <div\r\n        className=\"score-minus\"\r\n        onClick={() => changeScoreStateHandler(score - 1)}\r\n      >\r\n        <svg width=\"11\" height=\"3\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <path\r\n            d=\"M9.256 2.66c.204 0 .38-.056.53-.167.148-.11.222-.243.222-.396V.722c0-.152-.074-.284-.223-.395a.859.859 0 0 0-.53-.167H.76a.859.859 0 0 0-.53.167C.083.437.009.57.009.722v1.375c0 .153.074.285.223.396a.859.859 0 0 0 .53.167h8.495Z\"\r\n            fill=\"#C5C6EF\"\r\n          />\r\n        </svg>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Likes;\r\n","import React, { useState, useRef } from \"react\";\r\nimport \"./Styles/SingleComment.css\";\r\nimport Likes from \"./Likes\";\r\n\r\nconst SingleComment = ({\r\n  comment,\r\n  activeUser,\r\n  onclickReplyHandler,\r\n  singleCommentClass,\r\n  allComments,\r\n  setAllComments,\r\n  index,\r\n  indexParent,\r\n  indexReply,\r\n  pathReply,\r\n  displayModal,\r\n}) => {\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const contentEditRef = useRef();\r\n  let currentUser = \"\";\r\n  if (activeUser) {\r\n    currentUser = activeUser.username;\r\n  }\r\n\r\n  const clickEditHandler = function (e) {\r\n    // Activate contentEditable atribut on content comment\r\n    setIsEdit(true);\r\n    e.target.click();\r\n    contentEditRef.current.click();\r\n  };\r\n  const clickDeleteHandler = function (commentId) {\r\n    displayModal(commentId);\r\n  };\r\n\r\n  const updateCommentHandler = function () {\r\n    const updatedContent = contentEditRef.current.innerText;\r\n    // const newEditedObj = { ...comment, content: updatedContent };\r\n\r\n    // Update comment on replies array of parent object\r\n    allComments[indexParent]\r\n      ? (allComments[indexParent].replies[indexReply].content = updatedContent)\r\n      : (allComments[index].content = updatedContent);\r\n    setIsEdit(false);\r\n    // console.log(allComments);\r\n    // Update via setAllComments state - Doesn't work...  Unfinished!\r\n    // setAllComments((prevComents) =>\r\n    //   prevComents.splice(indexParent, 1, {\r\n    //     ...prevComents[indexParent],\r\n    //     replies: [\r\n    //       ...prevComents[indexParent].replies[indexReply],\r\n    //       newEditedObj,\r\n    //     ],\r\n    //   })\r\n    // );\r\n  };\r\n  return (\r\n    <section className={singleCommentClass}>\r\n      <Likes\r\n        score={comment.score}\r\n        id={comment.id}\r\n        comment={comment}\r\n        allComments={allComments}\r\n        setAllComments={setAllComments}\r\n      />\r\n\r\n      <div className=\"header-left\">\r\n        <div className=\"user-avatar\">\r\n          <img src={comment.user.image.png} alt=\"user-avatar\" />\r\n        </div>\r\n        <div className=\"user-name\">\r\n          {comment.user.username}\r\n          {comment.user.username === currentUser && (\r\n            <span className=\"active-user\">you</span>\r\n          )}\r\n        </div>\r\n        <div className=\"date-created\">{comment.createdAt}</div>\r\n      </div>\r\n\r\n      <div className=\"header-right\">\r\n        {comment.user.username === currentUser ? (\r\n          <div className=\"header-right user-edit\">\r\n            <div className=\"delete\">\r\n              <img src=\"./images/icon-delete.svg\" alt=\"\" />\r\n              <div\r\n                className=\"call-action delete\"\r\n                onClick={() => clickDeleteHandler(comment.id)}\r\n                // deleteComment={comment.id}\r\n              >\r\n                Delete\r\n              </div>\r\n            </div>\r\n            <div className=\"edit\">\r\n              <img src=\"./images/icon-edit.svg\" alt=\"img-edit\" />\r\n              <div className=\"call-action edit\" onClick={clickEditHandler}>\r\n                Edit\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div\r\n            className=\"header-right header-reply\"\r\n            onClick={() => onclickReplyHandler(comment.id)}\r\n          >\r\n            <img src=\"./images/icon-reply.svg\" alt=\"img-reply\" />\r\n            <div className=\"call-action\">Reply</div>\r\n          </div>\r\n        )}\r\n      </div>\r\n      {/* COMMENT CONTENT SECTION */}\r\n      <div\r\n        className=\"comment-content\"\r\n        contentEditable={isEdit ? \"true\" : \"false\"}\r\n        suppressContentEditableWarning={true}\r\n        ref={contentEditRef}\r\n      >\r\n        {comment.replyingTo ? (\r\n          <span className=\"reply-to\">@{comment.replyingTo} </span>\r\n        ) : (\r\n          false\r\n        )}\r\n        {comment.content}\r\n      </div>\r\n      {/* UPDATE BUTTON */}\r\n      {isEdit && (\r\n        <button className=\"button update-btn\" onClick={updateCommentHandler}>\r\n          UPDATE\r\n        </button>\r\n      )}\r\n    </section>\r\n  );\r\n};\r\nexport default SingleComment;\r\n","import React, { useState, useRef } from \"react\";\r\nimport \"./Styles/NewMsg.css\";\r\n\r\nfunction NewMsg(props) {\r\n  const contentInputRef = useRef();\r\n  const [newMsgContent, setNewMsgContent] = useState(\r\n    props.userToReply\r\n      ? `@${props.userToReply} Add a comment...`\r\n      : \"Add a comment...\"\r\n  );\r\n  const createID = function () {\r\n    return Math.floor(Math.random() * 1000);\r\n  };\r\n\r\n  const sendMsgHandler = function () {\r\n    const enteredComment = contentInputRef.current.textContent;\r\n    const newCommentObj = {\r\n      id: createID(),\r\n      content: enteredComment,\r\n      createdAt: \"now\",\r\n      score: 0,\r\n      user: {\r\n        image: {\r\n          png: props.activeUser.image.png,\r\n          webp: props.activeUser.image.webp,\r\n        },\r\n        username: props.activeUser.username,\r\n      },\r\n      replies: [],\r\n    };\r\n\r\n    if (props.btnType === \"SEND\") {\r\n      props.setAllComments((prevComents) => [...prevComents, newCommentObj]);\r\n      setNewMsgContent(\"Add a comment...\");\r\n    }\r\n    if (props.btnType === \"REPLY\") {\r\n      const newReplyObj = { ...newCommentObj, replyingTo: props.userToReply };\r\n\r\n      props.setAllComments((prevComents) => [\r\n        ...prevComents.filter((comm) => comm.id !== props.parentCommentID),\r\n        {\r\n          ...prevComents[props.parentIndex],\r\n          replies: [...prevComents[props.parentIndex].replies, newReplyObj],\r\n        },\r\n      ]);\r\n      // CLose reply window after submit reply\r\n      props.setIsReply(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className=\"single-comment new-msg\">\r\n      <div className=\"user-avatar\">\r\n        <img src={props.activeUser.image.png} alt=\"user-avatar\" width=\"35\" />\r\n      </div>\r\n      <div\r\n        className=\"new-content msg-editable\"\r\n        contentEditable=\"true\"\r\n        suppressContentEditableWarning={true}\r\n        data-placeholder=\" Add a comment...\"\r\n        onKeyPress={() => setNewMsgContent(\"\")}\r\n        ref={contentInputRef}\r\n      >\r\n        {newMsgContent}\r\n      </div>\r\n      <button className=\"button send-btn\" onClick={sendMsgHandler}>\r\n        {props.btnType}{\" \"}\r\n      </button>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default NewMsg;\r\n","import React from \"react\";\r\nimport \"./Styles/DeleteComment.css\";\r\n\r\nconst DeleteComment = (props) => {\r\n  // Call delete function from CommentsList.js via props and send comment.id to delete\r\n  const deleteHandler = function () {\r\n    props.deleteMsg(props.id);\r\n  };\r\n\r\n  return (\r\n    <div className=\"modal-container\">\r\n      <div className=\"modal-overlay\">\r\n        <h3>Delete comment</h3>\r\n        <p>\r\n          Are you sure you want to delete this comment? This will remove the\r\n          comment and can't be undone.\r\n        </p>\r\n        <footer className=\"modal-footer\">\r\n          <button className=\"btn-cancel\" onClick={props.displayModal}>\r\n            NO, CANCEL\r\n          </button>\r\n          <button className=\"btn-delete\" onClick={deleteHandler}>\r\n            YES, DELETE\r\n          </button>\r\n        </footer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeleteComment;\r\n","import React, { useState } from \"react\";\r\n// import ReactDOM from \"react-dom\";\r\nimport \"./Styles/CommentsList.css\";\r\nimport Data from \"../data.json\";\r\nimport SingleComment from \"./SingleComment\";\r\nimport NewMsg from \"./NewMsg\";\r\nimport DeleteComment from \"./DeleteComment\";\r\n// import { useEffect } from \"react/cjs/react.development\";\r\n\r\nconst CommentsList = () => {\r\n  const [showModal, setShowModal] = useState(false);\r\n  const { currentUser, comments } = Data;\r\n  const [allComments, setAllComments] = useState(comments);\r\n  const [isReply, setIsReply] = useState(false);\r\n  const [commentID, setCommentID] = useState(0);\r\n\r\n  const clickReplyHandler = function (id) {\r\n    setIsReply(true);\r\n    setCommentID(id);\r\n  };\r\n\r\n  const displayModalHandler = function (id) {\r\n    showModal ? setShowModal(false) : setShowModal(true);\r\n    // Passing by id from SingleComment to DeleteComment props\r\n    // commentIdToDelete = id;\r\n    setCommentID(id);\r\n  };\r\n  const deleteCommentHandler = function (id) {\r\n    // Iteration to filter main comments level\r\n    const mainCommentsArr = allComments.filter((comment) => comment.id !== id);\r\n    // Iteration to filter replies comments level\r\n    const newArr = mainCommentsArr.map(function (comment) {\r\n      const filteredReplies = comment.replies.filter(\r\n        (comment) => comment.id !== id\r\n      );\r\n      return { ...comment, replies: filteredReplies };\r\n    });\r\n    setAllComments(newArr);\r\n    displayModalHandler();\r\n  };\r\n\r\n  return (\r\n    <section className=\"comments-list\">\r\n      {showModal && (\r\n        <DeleteComment\r\n          displayModal={displayModalHandler}\r\n          deleteMsg={deleteCommentHandler}\r\n          id={commentID}\r\n        />\r\n      )}\r\n      {allComments.map((comment, index) => (\r\n        <div key={comment.id}>\r\n          <SingleComment\r\n            singleCommentClass=\"single-comment\"\r\n            activeUser={currentUser}\r\n            key={comment.id}\r\n            comment={comment}\r\n            allComments={allComments}\r\n            setAllComments={setAllComments}\r\n            index={index}\r\n            displayModal={displayModalHandler}\r\n            onclickReplyHandler={clickReplyHandler}\r\n          />\r\n\r\n          {isReply && comment.id === commentID && (\r\n            <NewMsg\r\n              activeUser={currentUser}\r\n              userToReply={comment.user.username}\r\n              btnType=\"REPLY\"\r\n              allComments={allComments}\r\n              setAllComments={setAllComments}\r\n              parentCommentID={comment.id}\r\n              parentIndex={index}\r\n              setIsReply={setIsReply}\r\n            />\r\n          )}\r\n          {comment.replies.length > 0 && (\r\n            <section className=\"section-reply\">\r\n              {comment.replies.map((reply, indexReply) => (\r\n                <div key={reply.id}>\r\n                  <SingleComment\r\n                    singleCommentClass=\"single-comment reply-msg\"\r\n                    activeUser={currentUser}\r\n                    key={reply.id}\r\n                    comment={reply}\r\n                    allComments={allComments}\r\n                    setAllComments={setAllComments}\r\n                    indexParent={index}\r\n                    indexReply={indexReply}\r\n                    displayModal={displayModalHandler}\r\n                    onclickReplyHandler={clickReplyHandler}\r\n                  />\r\n                  {isReply && reply.id === commentID && (\r\n                    <NewMsg\r\n                      activeUser={currentUser}\r\n                      userToReply={reply.user.username}\r\n                      btnType=\"REPLY\"\r\n                      allComments={allComments}\r\n                      setAllComments={setAllComments}\r\n                      parentCommentID={comment.id}\r\n                      parentIndex={index}\r\n                      setIsReply={setIsReply}\r\n                    />\r\n                  )}\r\n                </div>\r\n              ))}\r\n            </section>\r\n          )}\r\n        </div>\r\n      ))}\r\n      <NewMsg\r\n        activeUser={currentUser}\r\n        btnType=\"SEND\"\r\n        allComments={allComments}\r\n        setAllComments={setAllComments}\r\n      />\r\n    </section>\r\n  );\r\n};\r\nexport default CommentsList;\r\n","import React from \"react\";\r\nimport Atribution from \"./Components/Atribution\";\r\nimport CommentsList from \"./Components/CommentsList\";\r\nimport \"./Components/Styles/App.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <section className=\"main-container\">\r\n      <h1>Frontend Mentor - Interactive comments section</h1>\r\n      <CommentsList />\r\n      <Atribution />\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}